function [J,g]=CostFunction_HEP(param,pertA,plot_out,fig_handle)
%   Cost function to optimize the PDI
%   J is the cost
%   g are the constrains in the GlcNAc and GlcUA concentrations
%   Updated 05/05/2023 by AV and Yadira Boada
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% General parameters  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

load heparosan_GP.mat
load CM50.mat
Variance = 0;
Stdeviation =0;
Ncell = 1;
colormap_MwH = {'#66156b', '#802575', '#98377e', '#af4a86', '#c45e8e', '#d77495', '#e78c9a', '#f4a59e', '#fcc0a1','#ffdda1'};
colormap_Mw = [    0.4000    0.0824    0.4196;...
    0.5020    0.1451    0.4588;...
    0.5961    0.2157    0.4941;...
    0.6863    0.2902    0.5255;...
    0.7686    0.3686    0.5569;...
    0.8431    0.4549    0.5843;...
    0.9059    0.5490    0.6039;...
    0.9569    0.6471    0.6196;...
    0.9882    0.7529    0.6314;...
    1.0000    0.8667    0.6314];
lx = linspace(1, numel(colormap_MwH), 24);
colormap_Mw24 = interp1(1:numel(colormap_MwH), colormap_Mw, lx, 'spline');

%Initial Optical density
ODinitial = 0.01;
ODmax = 140;
total_time=48;    %Hours


%ODE
options = odeset('AbsTol',1e-8,'RelTol',1e-6);      % for ode function
step = 5;
growth_time=24;

%System size
species={'LuxR','LuxI','PmHS2','GlmM','GalU','KfiD','UxuR','NagCm',...
    'Sigma','Asigma','Complex','RNAi','mRNA_MurA','MurA',...
    'GlcUA','GlcNAc','GlcNAc6p','Heparosan','Peptidoglycans','NagK',...
    'OD','AHL','AHLe'};
States = length(species);

%Experiment
labels = {'0'};    %Induction in the lab [nM]
induction = [0];  %Induction in the lab [nM]

% %Create tables for saving data
% Tmolec=table;
% Tconc=table;
% T1molec=table;
% T1conc=table;
% T2molec=table;
% T2conc=table;

%Fermentation & initial conditions %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Vext_0 = 4e-3; %L
kDA_to_g = 1e3 * 1.6605402e-24; % g/kDA
Vext_reactor = 7; %L
Cellinitial = 1;

%% 0 Null initial conditions %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
p = parameters(Ncell,Stdeviation,ODmax,Vext_0,States);
p.k12 = param(3);
p.kmT = 0.133;
p.GlcNAc_factor = param(1);
p.GlcUA_factor = param(2);

Initial = zeros(1,States);
Initial(length(Initial)-2)=1; %ini conditions cells
tfin = 60*16;     %simulation time
tspan = 0:step:tfin-step;
pert =0;
[t0,x0] = ode23t(@(t,x) model_hep6p(t,x,p,pert,pertA),tspan, Initial, options);
%% 1 GROWTH %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
p = parameters(Ncell,Stdeviation,ODmax,Vext_reactor,States);

p.k12 = param(3); %4.96;
p.kmT = 0.133;
p.GlcNAc_factor = param(1);
p.GlcUA_factor = param(2);

Initial(end-1:end)=0; %AHL & AHLext
ahle0 = induction.*p.ahl_to_molec; %AHLe vector
tfin = 60*growth_time;  % Time (min)
tspan = 0:step:tfin-step;

for j=1:length(induction)
    Initial = x0(end,:);
    Initial(length(Initial)-2) = ODinitial*p.Vext*p.OD_to_cells;
    Initial(end)= ahle0(j); %AHLext

    [t1,x1] = ode23t(@(t,x) model_hep6p(t,x,p,pert,pertA),tspan, Initial, options);
    for k=1:length(species)
        if k==21 %OD
            data = x1(:,k)./(p.OD_to_cells*p.Vext); %Cells to OD
            data2=data;
        elseif k==length(species)
            data = x1(:,k);
            data2 = x1(:,k).*p.ahlmolec_to_nM;  %molecules to nM
        else
            data = x1(:,k);
            data2 = data.*p.molec_to_nM;
        end
        T1molec(:,k) =table(data);
        T1conc(:,k) =table(data2);
    end
    %             T1molec.Properties.VariableNames = species;
    %             T1conc.Properties.VariableNames = species;
    %             field=['AHL_' num2str(induction(j))];
    %             out.(field).molec=table2struct(Tmolec,"ToScalar",true);
    %             out.(field).conc=table2struct(Tconc,"ToScalar",true);
end
out.time=t1./60;

%% 2 PERTURBATION GlcUA  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

ahle0 = induction.*p.ahl_to_molec; %AHLe vector
tfin = t1(end)+60*(total_time-growth_time); % Tiempo de simulacion (min)
tspan = t1(end):step:tfin-step;
pert =1;

for j=1:length(induction)
    Initial=x1(end,:);
    Initial(15)=Initial(15)*1; %GlcUA decreases 40%

    [t1,x1] = ode23t(@(t,x) model_hep6p(t,x,p,pert,pertA),tspan, Initial, options);
    for k=1:length(species)
        if k==21 %OD
            data = x1(:,k)./(p.OD_to_cells*p.Vext); %Cells to OD
            data2=data;
        elseif k==length(species)
            data = x1(:,k);
            data2 = x1(:,k).*p.ahlmolec_to_nM;  %molecules to nM
        else
            data = x1(:,k);
            data2 = data.*p.molec_to_nM;
        end
        T2molec(:,k) =table(data);
        T2conc(:,k) =table(data2);
    end
    Tmolec = [T1molec;T2molec];
    Tconc = [T1conc;T2conc];
    Tmolec.Properties.VariableNames = species;
    Tconc.Properties.VariableNames = species;
    T1molec.Properties.VariableNames = species;
    T1conc.Properties.VariableNames = species;
    field=['AHL_' num2str(induction(j))];
    out.(field).molec=table2struct(Tmolec,"ToScalar",true);
    out.(field).conc=table2struct(Tconc,"ToScalar",true);
end
out.time=[out.time; t1./60];
%% Heparosan polydispersion index
%% Caluclation of the PDI index and molecular weight of Heparosan

GlcNAc_actual_concentration = [T1conc.GlcNAc(end); Tconc.GlcNAc(end)]*1e-6; %mM
GlcUA_actual_concentration = [T1conc.GlcUA(end); Tconc.GlcUA(end)]*1e-6; %mM
%Tconc.GlcNAc(end)*1e-6;
if plot_out == 1
    figure
    c = categorical({'1. Before perturbation' '2. After perturbation'});
    bar1 = bar(c,[GlcUA_actual_concentration GlcNAc_actual_concentration]);
    set(bar1(1),'DisplayName','GlcUA');
    set(bar1(2),'DisplayName','GlcNAc');
    legend;
    ylabel('Substrate concentration [mM]');
end
PDI_estimated = predict(gprMdl_pdi, [GlcNAc_actual_concentration GlcUA_actual_concentration]);
Hep_Mw_estimated = predict(gprMdl_Mw, [GlcNAc_actual_concentration GlcUA_actual_concentration]);

Restriction_Mw  = Hep_Mw_estimated(1); %<50
Restriction_Mwp  = Hep_Mw_estimated(2); %<50
Restriction_NAc = GlcNAc_actual_concentration(1); % <15).*1000;
Restriction_UA  = GlcUA_actual_concentration(1); %<5).*1000;
Restriction_NAcp = GlcNAc_actual_concentration(2); % <15).*1000;
Restriction_UAp  = GlcUA_actual_concentration(2); %<5).*1000;

J = (PDI_estimated(1) + PDI_estimated(2))/2; % + Restriction_Mwp + Restriction_Mw +Restriction_UA+Restriction_NAc;
J = [PDI_estimated(1) PDI_estimated(2)];
g(1) = Restriction_Mw;
g(2) = Restriction_Mwp;
g(3) = Restriction_NAc;
g(4) = Restriction_UA;
g(5) = Restriction_NAcp;
g(6) = Restriction_UAp;
g(7) = Restriction_UA- Restriction_NAc;
g(8) = Restriction_UAp -Restriction_NAcp;

Titer = Hep_Mw_estimated.*kDA_to_g.*T1molec.Heparosan(end).*p.OD_to_cells.*ODmax;
g(7) = Titer(1);
g(8) = Titer(2);
[GlcNAc_I, GlcUA_I] = meshgrid(0:0.5:8, 0:0.5:8);

%% Plots
if plot_out == 2
    % Plot the surface of GlcNAc, GlcUA, and PDI
    % Create a grid of GlcNAc and GlcUA values

    name = sprintf('GlcUA %0.1f%% Pert.', pertA);
    % Predict PDI values using the Gaussian Process Regression Model
    [PDI_pred,~,PDI_int] = predict(gprMdl_pdi, [GlcNAc_I(:), GlcUA_I(:)]);

    % Reshape the predicted PDI values into the same size as the grid
    PDI_predr = reshape(PDI_pred, size(GlcNAc_I));
    PDI_int_u = reshape(PDI_int(:,1), size(GlcNAc_I));
    PDI_int_l = reshape(PDI_int(:,2), size(GlcNAc_I));

    % Plot the surface of GlcNAc, GlcUA, and PDI
    if fig_handle == 0
        figure('Colormap',...
    [1 1 1;0.997524029219531 0.997524029219531 0.997524029219531;0.995048058439062 0.995048058439062 0.995048058439062;0.992572087658593 0.992572087658593 0.992572087658593;0.990096116878124 0.990096116878124 0.990096116878124;0.987620146097655 0.987620146097655 0.987620146097655;0.985144175317186 0.985144175317186 0.985144175317186;0.982668204536717 0.982668204536717 0.982668204536717;0.980192233756248 0.980192233756248 0.980192233756248;0.977716262975779 0.977716262975779 0.977716262975779;0.975240292195309 0.975240292195309 0.975240292195309;0.97276432141484 0.97276432141484 0.97276432141484;0.970288350634371 0.970288350634371 0.970288350634371;0.967812379853902 0.967812379853902 0.967812379853902;0.965336409073433 0.965336409073433 0.965336409073433;0.962860438292964 0.962860438292964 0.962860438292964;0.960384467512495 0.960384467512495 0.960384467512495;0.957908496732026 0.957908496732026 0.957908496732026;0.955432525951557 0.955432525951557 0.955432525951557;0.952956555171088 0.952956555171088 0.952956555171088;0.950480584390619 0.950480584390619 0.950480584390619;0.94800461361015 0.94800461361015 0.94800461361015;0.945528642829681 0.945528642829681 0.945528642829681;0.943052672049212 0.943052672049212 0.943052672049212;0.940576701268743 0.940576701268743 0.940576701268743;0.938100730488274 0.938100730488274 0.938100730488274;0.935624759707805 0.935624759707805 0.935624759707805;0.933148788927336 0.933148788927336 0.933148788927336;0.930672818146867 0.930672818146867 0.930672818146867;0.928196847366398 0.928196847366398 0.928196847366398;0.925720876585928 0.925720876585928 0.925720876585928;0.923244905805459 0.923244905805459 0.923244905805459;0.92076893502499 0.92076893502499 0.92076893502499;0.918292964244521 0.918292964244521 0.918292964244521;0.915816993464052 0.915816993464052 0.915816993464052;0.913341022683583 0.913341022683583 0.913341022683583;0.910865051903114 0.910865051903114 0.910865051903114;0.908389081122645 0.908389081122645 0.908389081122645;0.905913110342176 0.905913110342176 0.905913110342176;0.903437139561707 0.903437139561707 0.903437139561707;0.900961168781238 0.900961168781238 0.900961168781238;0.898485198000769 0.898485198000769 0.898485198000769;0.8960092272203 0.8960092272203 0.8960092272203;0.893533256439831 0.893533256439831 0.893533256439831;0.891057285659362 0.891057285659362 0.891057285659362;0.888581314878893 0.888581314878893 0.888581314878893;0.886105344098424 0.886105344098424 0.886105344098424;0.883629373317955 0.883629373317955 0.883629373317955;0.881153402537486 0.881153402537486 0.881153402537486;0.878677431757017 0.878677431757017 0.878677431757017;0.876201460976547 0.876201460976547 0.876201460976547;0.873725490196078 0.873725490196078 0.873725490196078;0.871249519415609 0.871249519415609 0.871249519415609;0.86877354863514 0.86877354863514 0.86877354863514;0.866297577854671 0.866297577854671 0.866297577854671;0.863821607074202 0.863821607074202 0.863821607074202;0.861345636293733 0.861345636293733 0.861345636293733;0.858869665513264 0.858869665513264 0.858869665513264;0.856393694732795 0.856393694732795 0.856393694732795;0.853917723952326 0.853917723952326 0.853917723952326;0.851441753171857 0.851441753171857 0.851441753171857;0.848965782391388 0.848965782391388 0.848965782391388;0.846489811610919 0.846489811610919 0.846489811610919;0.84401384083045 0.84401384083045 0.84401384083045;0.841537870049981 0.841537870049981 0.841537870049981;0.839061899269512 0.839061899269512 0.839061899269512;0.836585928489043 0.836585928489043 0.836585928489043;0.834109957708574 0.834109957708574 0.834109957708574;0.831633986928105 0.831633986928105 0.831633986928105;0.829158016147636 0.829158016147636 0.829158016147636;0.826682045367166 0.826682045367166 0.826682045367166;0.824206074586697 0.824206074586697 0.824206074586697;0.821730103806228 0.821730103806228 0.821730103806228;0.819254133025759 0.819254133025759 0.819254133025759;0.81677816224529 0.81677816224529 0.81677816224529;0.814302191464821 0.814302191464821 0.814302191464821;0.811826220684352 0.811826220684352 0.811826220684352;0.809350249903883 0.809350249903883 0.809350249903883;0.806874279123414 0.806874279123414 0.806874279123414;0.804398308342945 0.804398308342945 0.804398308342945;0.801922337562476 0.801922337562476 0.801922337562476;0.799446366782007 0.799446366782007 0.799446366782007;0.796970396001538 0.796970396001538 0.796970396001538;0.794494425221069 0.794494425221069 0.794494425221069;0.7920184544406 0.7920184544406 0.7920184544406;0.789542483660131 0.789542483660131 0.789542483660131;0.787066512879662 0.787066512879662 0.787066512879662;0.784590542099193 0.784590542099193 0.784590542099193;0.782114571318724 0.782114571318724 0.782114571318724;0.779638600538255 0.779638600538255 0.779638600538255;0.777162629757785 0.777162629757785 0.777162629757785;0.774686658977316 0.774686658977316 0.774686658977316;0.772210688196847 0.772210688196847 0.772210688196847;0.769734717416378 0.769734717416378 0.769734717416378;0.767258746635909 0.767258746635909 0.767258746635909;0.76478277585544 0.76478277585544 0.76478277585544;0.762306805074971 0.762306805074971 0.762306805074971;0.759830834294502 0.759830834294502 0.759830834294502;0.757354863514033 0.757354863514033 0.757354863514033;0.754878892733564 0.754878892733564 0.754878892733564;0.752402921953095 0.752402921953095 0.752402921953095;0.749926951172626 0.749926951172626 0.749926951172626;0.747450980392157 0.747450980392157 0.747450980392157;0.744975009611688 0.744975009611688 0.744975009611688;0.742499038831219 0.742499038831219 0.742499038831219;0.74002306805075 0.74002306805075 0.74002306805075;0.737547097270281 0.737547097270281 0.737547097270281;0.735071126489812 0.735071126489812 0.735071126489812;0.732595155709343 0.732595155709343 0.732595155709343;0.730119184928874 0.730119184928874 0.730119184928874;0.727643214148404 0.727643214148404 0.727643214148404;0.725167243367935 0.725167243367935 0.725167243367935;0.722691272587466 0.722691272587466 0.722691272587466;0.720215301806997 0.720215301806997 0.720215301806997;0.717739331026528 0.717739331026528 0.717739331026528;0.715263360246059 0.715263360246059 0.715263360246059;0.71278738946559 0.71278738946559 0.71278738946559;0.710311418685121 0.710311418685121 0.710311418685121;0.707835447904652 0.707835447904652 0.707835447904652;0.705359477124183 0.705359477124183 0.705359477124183;0.702883506343714 0.702883506343714 0.702883506343714;0.700407535563245 0.700407535563245 0.700407535563245;0.697931564782776 0.697931564782776 0.697931564782776;0.695455594002307 0.695455594002307 0.695455594002307;0.692979623221838 0.692979623221838 0.692979623221838;0.690503652441369 0.690503652441369 0.690503652441369;0.6880276816609 0.6880276816609 0.6880276816609;0.685551710880431 0.685551710880431 0.685551710880431;0.683075740099962 0.683075740099962 0.683075740099962;0.680599769319493 0.680599769319493 0.680599769319493;0.678123798539023 0.678123798539023 0.678123798539023;0.675647827758554 0.675647827758554 0.675647827758554;0.673171856978085 0.673171856978085 0.673171856978085;0.670695886197616 0.670695886197616 0.670695886197616;0.668219915417147 0.668219915417147 0.668219915417147;0.665743944636678 0.665743944636678 0.665743944636678;0.663267973856209 0.663267973856209 0.663267973856209;0.66079200307574 0.66079200307574 0.66079200307574;0.658316032295271 0.658316032295271 0.658316032295271;0.655840061514802 0.655840061514802 0.655840061514802;0.653364090734333 0.653364090734333 0.653364090734333;0.650888119953864 0.650888119953864 0.650888119953864;0.648412149173395 0.648412149173395 0.648412149173395;0.645936178392926 0.645936178392926 0.645936178392926;0.643460207612457 0.643460207612457 0.643460207612457;0.640984236831988 0.640984236831988 0.640984236831988;0.638508266051519 0.638508266051519 0.638508266051519;0.63603229527105 0.63603229527105 0.63603229527105;0.633556324490581 0.633556324490581 0.633556324490581;0.631080353710112 0.631080353710112 0.631080353710112;0.628604382929642 0.628604382929642 0.628604382929642;0.626128412149173 0.626128412149173 0.626128412149173;0.623652441368704 0.623652441368704 0.623652441368704;0.621176470588235 0.621176470588235 0.621176470588235;0.618700499807766 0.618700499807766 0.618700499807766;0.616224529027297 0.616224529027297 0.616224529027297;0.613748558246828 0.613748558246828 0.613748558246828;0.611272587466359 0.611272587466359 0.611272587466359;0.60879661668589 0.60879661668589 0.60879661668589;0.606320645905421 0.606320645905421 0.606320645905421;0.603844675124952 0.603844675124952 0.603844675124952;0.601368704344483 0.601368704344483 0.601368704344483;0.598892733564014 0.598892733564014 0.598892733564014;0.596416762783545 0.596416762783545 0.596416762783545;0.593940792003076 0.593940792003076 0.593940792003076;0.591464821222607 0.591464821222607 0.591464821222607;0.588988850442138 0.588988850442138 0.588988850442138;0.586512879661669 0.586512879661669 0.586512879661669;0.5840369088812 0.5840369088812 0.5840369088812;0.581560938100731 0.581560938100731 0.581560938100731;0.579084967320261 0.579084967320261 0.579084967320261;0.576608996539792 0.576608996539792 0.576608996539792;0.574133025759323 0.574133025759323 0.574133025759323;0.571657054978854 0.571657054978854 0.571657054978854;0.569181084198385 0.569181084198385 0.569181084198385;0.566705113417916 0.566705113417916 0.566705113417916;0.564229142637447 0.564229142637447 0.564229142637447;0.561753171856978 0.561753171856978 0.561753171856978;0.559277201076509 0.559277201076509 0.559277201076509;0.55680123029604 0.55680123029604 0.55680123029604;0.554325259515571 0.554325259515571 0.554325259515571;0.551849288735102 0.551849288735102 0.551849288735102;0.549373317954633 0.549373317954633 0.549373317954633;0.546897347174164 0.546897347174164 0.546897347174164;0.544421376393695 0.544421376393695 0.544421376393695;0.541945405613226 0.541945405613226 0.541945405613226;0.539469434832757 0.539469434832757 0.539469434832757;0.536993464052288 0.536993464052288 0.536993464052288;0.534517493271819 0.534517493271819 0.534517493271819;0.53204152249135 0.53204152249135 0.53204152249135;0.52956555171088 0.52956555171088 0.52956555171088;0.527089580930411 0.527089580930411 0.527089580930411;0.524613610149942 0.524613610149942 0.524613610149942;0.522137639369473 0.522137639369473 0.522137639369473;0.519661668589004 0.519661668589004 0.519661668589004;0.517185697808535 0.517185697808535 0.517185697808535;0.514709727028066 0.514709727028066 0.514709727028066;0.512233756247597 0.512233756247597 0.512233756247597;0.509757785467128 0.509757785467128 0.509757785467128;0.507281814686659 0.507281814686659 0.507281814686659;0.50480584390619 0.50480584390619 0.50480584390619;0.502329873125721 0.502329873125721 0.502329873125721;0.499853902345252 0.499853902345252 0.499853902345252;0.497377931564783 0.497377931564783 0.497377931564783;0.494901960784314 0.494901960784314 0.494901960784314;0.492425990003845 0.492425990003845 0.492425990003845;0.489950019223376 0.489950019223376 0.489950019223376;0.487474048442907 0.487474048442907 0.487474048442907;0.484998077662438 0.484998077662438 0.484998077662438;0.482522106881969 0.482522106881969 0.482522106881969;0.480046136101499 0.480046136101499 0.480046136101499;0.47757016532103 0.47757016532103 0.47757016532103;0.475094194540561 0.475094194540561 0.475094194540561;0.472618223760092 0.472618223760092 0.472618223760092;0.470142252979623 0.470142252979623 0.470142252979623;0.467666282199154 0.467666282199154 0.467666282199154;0.465190311418685 0.465190311418685 0.465190311418685;0.462714340638216 0.462714340638216 0.462714340638216;0.460238369857747 0.460238369857747 0.460238369857747;0.457762399077278 0.457762399077278 0.457762399077278;0.455286428296809 0.455286428296809 0.455286428296809;0.45281045751634 0.45281045751634 0.45281045751634;0.450334486735871 0.450334486735871 0.450334486735871;0.447858515955402 0.447858515955402 0.447858515955402;0.445382545174933 0.445382545174933 0.445382545174933;0.442906574394464 0.442906574394464 0.442906574394464;0.440430603613995 0.440430603613995 0.440430603613995;0.437954632833526 0.437954632833526 0.437954632833526;0.435478662053057 0.435478662053057 0.435478662053057;0.433002691272588 0.433002691272588 0.433002691272588;0.430526720492118 0.430526720492118 0.430526720492118;0.428050749711649 0.428050749711649 0.428050749711649;0.42557477893118 0.42557477893118 0.42557477893118;0.423098808150711 0.423098808150711 0.423098808150711;0.420622837370242 0.420622837370242 0.420622837370242;0.418146866589773 0.418146866589773 0.418146866589773;0.415670895809304 0.415670895809304 0.415670895809304;0.413194925028835 0.413194925028835 0.413194925028835;0.410718954248366 0.410718954248366 0.410718954248366;0.408242983467897 0.408242983467897 0.408242983467897;0.405767012687428 0.405767012687428 0.405767012687428;0.403291041906959 0.403291041906959 0.403291041906959;0.40081507112649 0.40081507112649 0.40081507112649;0.398339100346021 0.398339100346021 0.398339100346021;0.395863129565552 0.395863129565552 0.395863129565552;0.393387158785083 0.393387158785083 0.393387158785083;0.390911188004614 0.390911188004614 0.390911188004614;0.388435217224145 0.388435217224145 0.388435217224145;0.385959246443676 0.385959246443676 0.385959246443676;0.383483275663207 0.383483275663207 0.383483275663207;0.381007304882737 0.381007304882737 0.381007304882737;0.378531334102268 0.378531334102268 0.378531334102268;0.376055363321799 0.376055363321799 0.376055363321799;0.37357939254133 0.37357939254133 0.37357939254133;0.371103421760861 0.371103421760861 0.371103421760861;0.368627450980392 0.368627450980392 0.368627450980392]);

        surf(GlcNAc_I, GlcUA_I, PDI_predr)
    else
        figure(fig_handle);
    end
    hold on
    plot3(GlcNAc_actual_concentration,GlcUA_actual_concentration,PDI_estimated,'MarkerFaceColor',[0 0 0],'MarkerEdgeColor',[0 0 0],...
        'MarkerSize',30,...
        'Marker','.',...
        'LineStyle','none',...
        'Color',[1 0 0],'DisplayName',name);
    %surf(GlcNAc_I, GlcUA_I, PDI_int_l,'FaceAlpha',0.2,'EdgeAlpha',0.2)
    %surf(GlcNAc_I, GlcUA_I, PDI_int_u,'FaceAlpha',0.2,'EdgeAlpha',0.2)
    xlabel('UDP-GlcNAc [mM]')
    ylabel('UDP-GlcUA [mM]')
    zlabel('Polydispersion Index')
    view([15 34])

elseif plot_out == 3

    % Predict Mw values using the Gaussian Process Regression Model
    % Int is the 95 percent confidence interval
    [Mw_pred,Mw_sd,Mw_int] = predict(gprMdl_Mw, [GlcNAc_I(:), GlcUA_I(:)]);

    % Reshape the predicted PDI values into the same size as the grid
    Mw_predr = reshape(Mw_pred, size(GlcNAc_I));
    Mw_int_u = reshape(Mw_int(:,1), size(GlcNAc_I));
    Mw_int_l = reshape(Mw_int(:,2), size(GlcNAc_I));


    %Mw_predr = reshape(Mw_pred, size(GlcNAc_I));
    if fig_handle == 0
        figure;
        colormap(Colormap_MW50);
        clim([30 110]);
        surfc(GlcNAc_I, GlcUA_I, Mw_predr);
    else
        figure(fig_handle);
    end

    hold on
    name = sprintf('GlcUA %0.1f%% Pert.', pertA);

    plot3(GlcNAc_actual_concentration,GlcUA_actual_concentration,Hep_Mw_estimated,'MarkerFaceColor',[0 0 0],'MarkerEdgeColor',[0 0 0],...
        'MarkerSize',30,...
        'Marker','.',...
        'LineStyle','none',...
        'Color',[1 0 0],'DisplayName',name);
    %surf(GlcNAc_I, GlcUA_I, Mw_int_l,'FaceAlpha',0.2,'EdgeAlpha',0.2);
    %surf(GlcNAc_I, GlcUA_I, Mw_int_u,'FaceAlpha',0.2,'EdgeAlpha',0.2);
    xlabel('UDP-GlcNAc [mM]')
    ylabel('UDP-GlcUA [mM]')
    zlabel('Heparosan molecular weight (Mw)')
    view([35 34])
elseif (plot_out == 5)
    J = [PDI_estimated(1)  PDI_estimated(2)]; %
    total_rows=4;
    total_cols=3;
    plot_number = total_cols*total_rows;
    j=0;
    counter=0;
    counter=j + counter;

    species_p5={'OD','Sigma','Peptidoglycans',...
        'PmHS2','Asigma','GlcUA',...
        'UxuR','RNAi','GlcNAc',...
        'NagCm','MurA','Heparosan'};

    if fig_handle == 0
        figure;
        colormap(winter);
    else
        figure(fig_handle);
        colormap(winter);
        hold on;
    end

    for j=1:plot_number
        hs=subplot(total_rows,total_cols,j);
        for k=1:length(induction)
            field=['AHL_' num2str(induction(k))];
            field2=char(species_p5(j+counter));
            plot(out.time,out.(field).conc.(field2),'LineWidth',3); %molecules or concentration
            hold on;
        end
        title(species_p5(j+counter)); xlabel('Time (h)'); ylabel('nM');
        %legend(labels);
        grid on;
        %hold off;
    end
    counter=j + counter;
elseif (plot_out == 41 || plot_out == 42 || plot_out == 43 || plot_out == 44)
    J = [PDI_estimated(1)  PDI_estimated(2)]; %
    total_rows=3;
    total_cols=2;
    total_fig= round( length(species)/(total_rows*total_cols) );
    j=0;
    counter=0;
    counter=j + counter;

    f_now = plot_out -40;

    for f = 1:total_fig
        if f==total_fig
            plot_number= length(species)-counter;
        else
            plot_number=total_rows*total_cols;
        end
        if f ~= f_now
            counter= plot_number + counter;
            continue
        end
        if fig_handle == 0
            figure;
            colormap(winter);
        else
            figure(fig_handle);
            colormap(winter);
            hold on;
        end

        for j=1:plot_number
            hs=subplot(total_rows,total_cols,j);
            for k=1:length(induction)
                field=['AHL_' num2str(induction(k))];
                field2=char(species(j+counter));
                plot(out.time,out.(field).conc.(field2),'LineWidth',2); %molecules or concentration
                hold on;
            end
            title(species(j+counter)); xlabel('Time (h)'); ylabel('nM');
            %legend(labels);
            grid on;
            %hold off;
        end
        counter=j + counter;
    end

end








